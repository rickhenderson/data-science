setwd(getwd())
dir()
save.image("C:\\Users\\Rick\\Documents\\rprog\\.RData")
d=read_csv(hw1_data.csv)
d=read/csv(hw1_data.csv)
d=read.csv(hw1_data.csv)
d=read.csv("hw1_data.csv")
d
ls
a = NA
a
mean(a)
a = c(NA, 2)
a
mean(a)
a
names(d)
d$Ozone
d[d$Ozone]
d[d$Ozone, ]
d[d$Ozone < 10, ]
r = nrow(d)
c = ncol(d)
r
c
names(D)
names(d_
names(d_
names(d)
d[> 50]
d[>50]
d[$Ozone > 50]
d$Ozone
d$Ozone > 50
d[d$Ozone > 50]
d[d$Ozone > 50, ]
d[d$Ozone > 50, ]$Temp
d[d$Ozone > 31 & d$Temp > 90, Temp]
d[d$Ozone > 31 & d$Temp > 90, d$Temp]
d[d$Ozone > 31 & d$Temp > 90, d$Temp, ]
d[d$Ozone > 50, ]$Temp
colTemp = d[d$Ozone > 50, ]$Temp
colTemp
class(colTemp)
mean(colTemp)
mean(colTemp, na.rm=T)
mean(colTemp>90, na.rm=T)
colTemo>90
colTemp > 90
is.na(colTemp)
colTemp = d[d$Ozone > 90, ]$Temp
colTemp
swirl()
library(swirl)
save.image("C:\\Users\\Rick\\Documents\\rprog\\.RData")
swirl()
x <- c(44, NA, 5, NA)
x <- x *3
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na()
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
d
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo =11, bar =2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
ls()
rm(vect)
rm(vect2)
rm(a)
rm(c, x, y)
ls()
rm(r, z, my_na, my_data)
ls()
d
d[!is.na(d)]
d
mean(d$Temp[d$Month == 6])
max(d$Ozone[!is.na][d$Month == 5)
max(d$Ozone[!is.na][d$Month == 5]
max(d$Ozone[!is.na][d$Month == 5])
max(d$Ozone[!is.na][d$Month == 5])
max(d$Ozone[!is.na(d$Ozone][d$Month == 5])
max(d$Ozone[!is.na(d$Ozone)][d$Month == 5])
max(d$Ozone[d$Month ==4], TRUE)
max(d$Ozone[d$Month ==4], rm.na = TRUE)
max(d$Ozone[d$Month ==4], na.rm = TRUE)
max(d$Ozone[d$Month == 5], na.rm = TRUE)
rm(list=ls(all=TRUE))
pullutantmean <- function(directory, pollutant, id = 1:332) {
q
{
}
}
rm(list=ls(all=TRUE))
x<-4
class(x)
x<=c(4, TRUE)
class(X)
class(x)
x <- c(1,3,5)
x
y <- c(3,2,10)
y
rbind(x,y)
x<-list(2, "a", "b", TRUE)
x[[2]]
x <-1:4
x
y <- 2
x
x+y
dir()
d = read.csv("hw1_data.csv")
d
d[1:2]
head(d,2)
tail(d,2)
d[47]
d[47,]
d(1:4, ]
d(c(1:4), ]
d[1:4, ]
is.na(d$Ozone)
sum(is.na(d$Ozone))
mean(d$Ozone, rm.na=TRUE)
mean(d$Ozone, na.rm=TRUE)
d[d$Ozone > 31 & d$Temp > 90]
d[d$Ozone > 31 & d$Temp > 90, ]
wanted = d[d$Ozone > 31 & d$Temp > 90, ]
wanted
mean(wanted$Solar.R, na.rm=TRUE)
mean(d[d$Ozone > 31 & d$Temp > 90, ]$Solar.R, na.rm = TRUE)
d$Temp
d[d$Temp]
d[,d$Temp]
d[ ,d$Temp]
d[ , d$Temp]
d[$Temp]
d[Temp]
d
mean(d$Temp[d$Month==6])
mean(d$Temp[d$Month==6], na.rm=TRUE)
max(d$Ozone[d$Month == 5], na.rm=TRUE_
)
max(d$Ozone[d$Month == 5], na.rm=TRUE)
exit
quit()
getwd()
ldir
dir
dir()
source(basicFor.R)
source(:basicFor.R")
source("basicFor.R")
source("basicFor.R")
source("basicFor.R")
source("basicFor.R")
x
source("basicFor.R")
source("basicFor.R")
source("basicFor.R")
q()
source('~/rprog/basicFor.R', encoding = 'UTF-8')
# Demonstrating different for loops
source('~/rprog/basicFor.R')
add2 <- function(x,y) {
x + y
}
add2(3,6)
source('~/rprog/basicFunctions.R')
a <- c(4, 3, 22, 53, 10)
print_above10(a)
source('~/rprog/basicFunctions.R')
above10(a)
x = above10(a)
x
source('~/rprog/basicFunctions.R')
x
a
a <- 1:20
a
above10(a)
above(a, 10)
source('~/rprog/basicFunctions.R')
above(a)
above(a, 4)
ls()
airquality <- read.csv("hw1_data.csv")
airquality
columnmean(airquality)
source('~/rprog/basicFunctions.R')
source('~/rprog/basicFunctions.R')
columnmean(airquality)
source('~/rprog/basicFunctions.R')
columnmean(airquality)
remove(list = ls())
getwd()
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
andy
formals(read.csv)
c(formals(read.csv))
? strptime
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x<-5
y <- if(x<3) {
NA
} else {
10
}
y
list
list()
ls()
rm(list = ls())
traceback
?for
?
?loop
source('~/rprog/debugging.R')
simpleloop()
simpleLoop()
source('~/rprog/debugging.R')
source('~/rprog/debugging.R')
simpleLoop()
source('~/rprog/debugging.R')
simpleLoop()
source('~/rprog/debugging.R')
simpleLoop()
source('~/rprog/debugging.R')
simpleLoop()
source('~/rprog/debugging.R')
simpleLoop()
traceback()
library(datasets)
data(iris)
?iris
head(iris)
virg = iris[, "virginica"]
virg = iris[iris$Species = "virginica"]
virg <- iris[iris$Species = "virginica"]
virg <- iris[iris$Species == "virginica"]
virg <- iris[iris$Species]
virg
head(virg)
ls
iris$Species
iris[iris$Species]
head(iris[$species])
head(iris[$Species])
iris[iris$Species == "virginica"]
iris[, iris$Species == "virginica"]
iris[iris$Species == "virginica", ]
q1 <- iris[iris$Species == "virginica", ]
head(q1)
mean(q1$Sepal.Length, na.rm=TRUE)
apply(iris,2,mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[,1:4],2, mean)
data("mtcars")
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
head(mtcars)
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
?abs
209.21429 - 82.63636
82.62626 - 209.21429
head(mtcars)
hist(mtcars[, 2])
hist(mtcars[, 4])
source('~/rprog/debugging.R')
simpleLoop()
traceback
traceback()
x <- c("Hello", 1, 3)
summary(x)
str(x)
summary(ls())
summary(list = ls())
summary(list <- ls())
ls
ls()
str(ls())
help(gl)
gender <- gl(2, 1)
str(gender)
gender
summary
summary(gender)
treat <- gl(2, 8, labels=c("Control", "Treat"))
treat
gender <- gl(2, 1, labels=c("Female", "Make"))
gender
gender <- gl(2, 1, labels=c("Female", "Male"))
ls
gender
summary(gender)
str(gender)
pwd
getwd()
ls
ls()
dir()
cp102a <- read.csv("cp102_a.csv")
cp102b <- read.csv("cp102_b.csv")
summary(cp102a)
str(cp102a)
remove(cp102a)
remove(cp102b)
fall2014 <- read.csv("secaf14")
fall2014 <- read.csv("secaf14.csv")
summary(fall2014)
str(fall2014)
head(fall2014)
names(fall2014)
finals <- fall2014$Final.Exam.Points.Grade..Numeric.MaxPoints.137.Weight.30.
summary(finals)
92.55/137
mean(finals)
mean(finals, na.rm=TRUE)
stdev()
str(sd)
sd(finals, na.rm=TRUE)
str(rnorm)
rnorm(10, 92, 16)
p <- rnorm(100, 50, 1)
p <- rnorm(100, 50, 25)
hist(p)
str(hist)
str(p)
hist(finals)
str(rpois)
help(rpois)
plot(x, pbinom(x, 100, 0.01), type = "s", ylab = "F(x)",
main = "Binomial(100, 0.01) CDF")
x <- seq(-0.01, 5, 0.01)
plot(x, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x, pbinom(x, 100, 0.01), type = "s", ylab = "F(x)",
main = "Binomial(100, 0.01) CDF")
sample(1:6)
sample(1:6, 100)
sample(1:6, 100, replace=TRUE)
x
plot x
plot(x
)
rolls <- sample(1:6, 100, replace=TRUE)
plot(rolls)
hist(rolls)
summary(rools)
summary(rolls)
str(rolls)
rolls <- sample(3:18, 1000, replace=TRUE)
summary(rools)
summary(rolls)
hist(rolls)
rolls <- sample(3:18, 1000, replace=TRUE)
hist(rolls)
2roll <- rolls + rolls
roll2 <- rolls + rolls
rolls <- sample(1:6, 1000, replace=TRUE)
roll2 <- rolls + rolls + rolls
hist(rolls)
hist(roll2)
summary(roll2)
set.seed(1)
rpois(5, 2)
x <- rep(0:1, each = 5)
x
set.seed(10)
e <- rnorm(10, 0, 20)
y <- 0.5 2 * x + e
y <- 0.5 + 2 * x + e
plot(x,y)
setwd("~/GitHub/data-science/gettidydata")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", ".\\data\q1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", ".\\data\\q1.csv")
list.files("data")
dateDownloaded <- date()
dateDownloaded
df <- read.csv("data//q1.csv")
head(df,30)
labels(df)
df.cols
col(df)
df["VALS"]
df["val"]
df.val
df."val"
names(df)
ncol(df)
nrow(df)
df$VAL
houseValues <- df$VAL
houseValues
goodHouseValues <- houseValues[!is.na(houseValues)]
nrow(goodHouseValues)
goodHouseValues
ncol(goodHouseValues)
ncols(goodHouseValues)
goodHousedf <- data.frame(goodHouseValues)
goodHouseDf[goodHouseDF==24]
goodHouseDf[24]
goodHousedf
names(goodHousedf)
goodHousedf[$goodHouseValues = 24]
goodHousedf[$goodHouseValues = 24,]
goodHousedf[goodHouseValues = 24,]
goodHousedf[goodhousedf$goodHouseValues = 24,]
goodHousedf[goodhousedf$1 = 24,]
hist(goodHousedf)
hist(goodHousevalues)
hist(goodhousedf[1])
head(goodHousedf,10)
goodhousedf[$goodHouseValues]
goodhousedf$goodHouseValues
goodHousedf[$goodHouseValues]
goodHousedf$goodHouseValues
goodHousedf$goodHouseValues >20
goodHousedf$goodHouseValues = 24
goodHouseValues
head(goodHousedf, 10)
remove(goodHousedf)
ans <- data.frame(goodHouseValues)
head(ans)
x < 5
x <- 5
x ==2
ans[ans$goodHouseValues == 24]
ans
ans[, ans$goodHouseValues == 24]
ans[, ans$goodHouseValues]
ans[, $goodHouseValues]
names(ans)
ans[ans$goodHouseValues == 24, ]
allExpensiveHouses <- ans[ans$goodHouseValues == 24, ]
nrow(allExpensiveHouses)
allExpensiveHouses
ncol(allExpensiveHouses)
allExpensiveHouses.length
length(allExpensiveHouses)
clear
cls
# Week 1 Quiz
# Get Clean Data
# Download the Dataset for the Week 1 Quiz, Q1
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
#download.file(fileURL, ".\\data\\q1.csv")
# Set the date the file was downloaded
#dateDownloaded <- date()
# Wed Mar 02 22:22:12 2016
# Read in the file as a data frame
df <- read.csv("data//q1.csv")
# Narrow the data down to one column / variable (the VAL column for house values)
houseValues <- df$VAL
# Eliminate NA Values to store only the good data
goodHouseValues <- houseValues[!is.na(houseValues)]
# Convert the vector of integers into a data frame for subsetting
# Required to find the # of houses with VAL == 24
ans <- data.frame(goodHouseValues)
# Subset the data properly to filter just the houses with VAL == 24
allExpensiveHouses <- ans[ans$goodHouseValues == 24, ]
# Get the number of rows, but its now a vector of integers and not a frame
q1Answer <- length(allExpensiveHouses)
# Display the results
q1Answer
